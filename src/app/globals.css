@tailwind base;
@tailwind components;
@tailwind utilities;

@layer components {
  input[type="checkbox"] {
    @apply appearance-none;
    @apply outline-none;
    @apply border-textColor;
    @apply w-5;
    @apply h-5;
    @apply cursor-pointer;
  }
  input[type="text"] {
    @apply py-2.5;
  }
  input[type="password"] {
    @apply py-2.5;
  }
  input[type="email"] {
    @apply py-2.5;
  }
  input[type="number"] {
    @apply py-2.5;
  }
  input[type="tel"] {
    @apply py-2.5;
  }
}

:root {
  --primary: 255, 255, 255;
  --secondary: 242, 242, 242;
  --tertiary: 157, 157, 157;
  --accent: 0, 128, 128;
  --text-color: 33, 33, 33;
}
[data-theme="dark"] {
  --primary: 0, 0, 0;
  --secondary: 34, 52, 76;
  --accent: 0, 128, 128;
  --text-color: 246, 245, 248;
  --tertiary: 157, 157, 157;
}

.banner:before {
  background-color: rgba(48, 56, 64, 0.9);
  display: block;
  position: absolute;
  content: " ";
  height: 100%;
  width: 100%;
}

.react-multiple-carousel__arrow {
  z-index: 10;
}

rect {
  fill: rgba(var(--primary), 1); /* Use CSS variables for dynamic fill color */
}

[data-theme="dark"] rect {
  fill: rgba(var(--primary-dark), 1); /* Update fill color for dark theme */
}

.node {
  transition: transform 1s ease-in-out; /* Add transition for smooth animation */
}

.node:hover {
  transform: rotateY( 180deg); /* Rotate the element in 3D on hover */
}

.node:hover .default-text {
  display: none; /* Hide default text on hover */
}



/* Hide hover text by default */
.hover-text {
  display: none;
}

.node:hover .hover-text {
  display: block; /* Show hover text on hover */
  transform: rotateY(180deg); /* Flip the hover text */
 
}

/* Define the swinging animation */
@keyframes swing {
  0% {
      transform: rotate(0deg);
  }
  25%{
    transform: rotate(30deg);
  }
  75% {
      transform: rotate(-30deg);
  }
  100%{
    transform: rotate(0deg);
  }
}

/* Apply the swinging animation to the pendulum */
.animate-swing {
  transform-origin: top;
  animation: swing 2s linear infinite both ; /* Adjust duration and timing function as needed */
}

.confetti-container {
  position: relative;
  width: 100%;
  height: 100%;
}

.confetti {
  position: absolute;
  top: 79%;
  left: 50%;
  width: 100%;
}


